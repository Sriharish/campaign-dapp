{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport AppShell from '../../components/AppShell';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport { Card } from 'semantic-ui-react';\n\nvar CampaignShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CampaignShow).apply(this, arguments));\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderMetrics\",\n    value: function renderMetrics() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          manager = _this$props.manager,\n          minimumContribution = _this$props.minimumContribution,\n          requestCount = _this$props.requestCount,\n          approversCount = _this$props.approversCount;\n      var items = [{\n        header: manager,\n        meta: 'Manager',\n        description: 'Creator of this campaign.',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: minimumContribution,\n        meta: 'Minimum Contribution (Wei)',\n        description: 'You must contribute at least this much wei to be considered an approver.'\n      }, {\n        header: requestCount,\n        meta: 'Number of Requests',\n        description: 'A request tries to withdray money from the contract. Requests must be approved by approvers.'\n      }, {\n        header: approversCount,\n        meta: 'Number of Approvers',\n        description: 'Number of people who have already donated to the campaign.'\n      }, {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Campaign Balance (Ether)',\n        description: 'This balance is how much money this campaign has to spend.'\n      }];\n      return React.createElement(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppShell, null, React.createElement(\"h3\", null, \"Campaign Show\"), this.renderMetrics());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  minimumContribution: summary[0],\n                  balance: summary[1],\n                  requestCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["C:\\Users\\sriha\\Documents\\vscode\\standardwei\\pages\\campaigns\\show.js"],"names":["React","Component","AppShell","Campaign","web3","Card","CampaignShow","props","balance","manager","minimumContribution","requestCount","approversCount","items","header","meta","description","style","overflowWrap","utils","fromWei","renderMetrics","campaign","query","address","methods","getSummary","call","summary"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;;IAEMC,Y;;;;;;;;;;;;;oCAac;AAAA,wBAOR,KAAKC,KAPG;AAAA,UAERC,OAFQ,eAERA,OAFQ;AAAA,UAGRC,OAHQ,eAGRA,OAHQ;AAAA,UAIRC,mBAJQ,eAIRA,mBAJQ;AAAA,UAKRC,YALQ,eAKRA,YALQ;AAAA,UAMRC,cANQ,eAMRA,cANQ;AASZ,UAAMC,KAAK,GAAG,CACV;AACIC,QAAAA,MAAM,EAAEL,OADZ;AAEIM,QAAAA,IAAI,EAAE,SAFV;AAGIC,QAAAA,WAAW,EAAE,2BAHjB;AAIIC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AAJX,OADU,EAOV;AACIJ,QAAAA,MAAM,EAAEJ,mBADZ;AAEIK,QAAAA,IAAI,EAAE,4BAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OAPU,EAYV;AACIF,QAAAA,MAAM,EAAEH,YADZ;AAEII,QAAAA,IAAI,EAAE,oBAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OAZU,EAiBV;AACIF,QAAAA,MAAM,EAAEF,cADZ;AAEIG,QAAAA,IAAI,EAAE,qBAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OAjBU,EAsBV;AACIF,QAAAA,MAAM,EAAEV,IAAI,CAACe,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA4B,OAA5B,CADZ;AAEIO,QAAAA,IAAI,EAAE,0BAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OAtBU,CAAd;AA6BA,aAAO,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEH;AAAnB,QAAP;AACH;;;6BAEQ;AACL,aACI,oBAAC,QAAD,QACI,gDADJ,EAEK,KAAKQ,aAAL,EAFL,CADJ;AAMH;;;;;;gDA5D4Bd,K;;;;;;AACnBe,gBAAAA,Q,GAAWnB,QAAQ,CAACI,KAAK,CAACgB,KAAN,CAAYC,OAAb,C;;uBACHF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,E;;;AAAhBC,gBAAAA,O;iDACC;AACHlB,kBAAAA,mBAAmB,EAAEkB,OAAO,CAAC,CAAD,CADzB;AAEHpB,kBAAAA,OAAO,EAAEoB,OAAO,CAAC,CAAD,CAFb;AAGHjB,kBAAAA,YAAY,EAAEiB,OAAO,CAAC,CAAD,CAHlB;AAIHhB,kBAAAA,cAAc,EAAEgB,OAAO,CAAC,CAAD,CAJpB;AAKHnB,kBAAAA,OAAO,EAAEmB,OAAO,CAAC,CAAD;AALb,iB;;;;;;;;;;;;;;;;;;;EAJY3B,S;;AAgE3B,eAAeK,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport AppShell from '../../components/AppShell';\r\nimport Campaign from '../../ethereum/campaign';\r\nimport web3 from '../../ethereum/web3';\r\nimport { Card } from 'semantic-ui-react';\r\n\r\nclass CampaignShow extends Component {\r\n    static async getInitialProps(props) {\r\n        const campaign = Campaign(props.query.address);\r\n        const summary = await campaign.methods.getSummary().call();\r\n        return {\r\n            minimumContribution: summary[0],\r\n            balance: summary[1],\r\n            requestCount: summary[2],\r\n            approversCount: summary[3],\r\n            manager: summary[4]\r\n        };\r\n    }\r\n\r\n    renderMetrics() {\r\n        const {\r\n            balance,\r\n            manager,\r\n            minimumContribution,\r\n            requestCount,\r\n            approversCount\r\n        } = this.props;\r\n\r\n        const items = [\r\n            {\r\n                header: manager,\r\n                meta: 'Manager',\r\n                description: 'Creator of this campaign.',\r\n                style: { overflowWrap: 'break-word' }\r\n            },\r\n            {\r\n                header: minimumContribution,\r\n                meta: 'Minimum Contribution (Wei)',\r\n                description: 'You must contribute at least this much wei to be considered an approver.',\r\n            },\r\n            {\r\n                header: requestCount,\r\n                meta: 'Number of Requests',\r\n                description: 'A request tries to withdray money from the contract. Requests must be approved by approvers.',\r\n            },\r\n            {\r\n                header: approversCount,\r\n                meta: 'Number of Approvers',\r\n                description: 'Number of people who have already donated to the campaign.',\r\n            },\r\n            {\r\n                header: web3.utils.fromWei(balance, 'ether'),\r\n                meta: 'Campaign Balance (Ether)',\r\n                description: 'This balance is how much money this campaign has to spend.',\r\n            }\r\n        ]\r\n\r\n        return <Card.Group items={items} />;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <AppShell>\r\n                <h3>Campaign Show</h3>\r\n                {this.renderMetrics()}\r\n            </AppShell>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}